apiVersion: v1
kind: Secret
metadata:
  name: {{ include "versus-incident.fullname" . }}-secrets
  labels:
    {{- include "versus-incident.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.alert.slack.enable }}
  slack_token: {{ .Values.alert.slack.token | b64enc | quote }}
  slack_channel_id: {{ .Values.alert.slack.channelId | b64enc | quote }}
  {{- end }}
  
  {{- if .Values.alert.telegram.enable }}
  telegram_bot_token: {{ .Values.alert.telegram.botToken | b64enc | quote }}
  telegram_chat_id: {{ .Values.alert.telegram.chatId | b64enc | quote }}
  {{- end }}
  
  {{- if .Values.alert.email.enable }}
  smtp_host: {{ .Values.alert.email.smtpHost | b64enc | quote }}
  smtp_port: {{ .Values.alert.email.smtpPort | toString | b64enc | quote }}
  smtp_username: {{ .Values.alert.email.username | b64enc | quote }}
  smtp_password: {{ .Values.alert.email.password | b64enc | quote }}
  email_to: {{ .Values.alert.email.to | b64enc | quote }}
  email_subject: {{ .Values.alert.email.subject | b64enc | quote }}
  {{- end }}
  
  {{- if .Values.alert.msteams.enable }}
  msteams_power_automate_url: {{ .Values.alert.msteams.powerAutomateUrl | b64enc | quote }}
  {{- range $key, $val := .Values.alert.msteams.otherPowerUrls }}
  msteams_other_power_url_{{ $key }}: {{ $val | b64enc | quote }}
  {{- end }}
  {{- end }}
  
  {{- if .Values.alert.lark.enable }}
  lark_webhook_url: {{ .Values.alert.lark.webhookUrl | b64enc | quote }}
  {{- range $key, $val := .Values.alert.lark.otherWebhookUrls }}
  lark_other_webhook_url_{{ $key }}: {{ $val | b64enc | quote }}
  {{- end }}
  {{- end }}
  
  {{- if .Values.alert.sns.enable }}
  {{- if .Values.alert.sns.topicArn }}
  sns_topic_arn: {{ .Values.alert.sns.topicArn | b64enc | quote }}
  {{- end }}
  {{- if .Values.alert.sns.httpsEndpointSubscription }}
  sns_https_endpoint_subscription: {{ .Values.alert.sns.httpsEndpointSubscription | b64enc | quote }}
  {{- end }}
  {{- end }}
  
  {{- if .Values.alert.sqs.enable }}
  sqs_queue_url: {{ .Values.alert.sqs.queueUrl | b64enc | quote }}
  {{- end }}
  
  {{- if or .Values.oncall.enable .Values.oncall.initializedOnly }}
  
  {{- if eq .Values.oncall.provider "aws_incident_manager" }}
  aws_incident_manager_response_plan_arn: {{ .Values.oncall.awsIncidentManager.responsePlanArn | b64enc | quote }}
  {{- range $key, $val := .Values.oncall.awsIncidentManager.otherResponsePlanArns }}
  aws_incident_manager_other_response_plan_arn_{{ $key }}: {{ $val | b64enc | quote }}
  {{- end }}
  {{- end }}
  
  {{- if eq .Values.oncall.provider "pagerduty" }}
  pagerduty_routing_key: {{ .Values.oncall.pagerduty.routingKey | b64enc | quote }}
  {{- range $key, $val := .Values.oncall.pagerduty.otherRoutingKeys }}
  pagerduty_other_routing_key_{{ $key }}: {{ $val | b64enc | quote }}
  {{- end }}
  {{- end }}
  
  {{- if not .Values.redis.enabled }}
  redis_host: {{ .Values.externalRedis.host | b64enc | quote }}
  redis_port: {{ .Values.externalRedis.port | toString | b64enc | quote }}
  redis_password: {{ .Values.externalRedis.password | b64enc | quote }}
  {{- if .Values.externalRedis.tls.enabled }}
  {{- if .Values.externalRedis.tls.caFile }}
  redis_tls_ca_file: {{ .Values.externalRedis.tls.caFile | b64enc | quote }}
  {{- end }}
  {{- if .Values.externalRedis.tls.certFile }}
  redis_tls_cert_file: {{ .Values.externalRedis.tls.certFile | b64enc | quote }}
  {{- end }}
  {{- if .Values.externalRedis.tls.keyFile }}
  redis_tls_key_file: {{ .Values.externalRedis.tls.keyFile | b64enc | quote }}
  {{- end }}
  {{- end }}
  {{- else }}
  redis_host: {{ printf "%s-redis-master" .Release.Name | b64enc | quote }}
  redis_port: {{ "6379" | b64enc | quote }}
  redis_password: {{ .Values.redis.auth.password | b64enc | quote }}
  {{- end }}
  {{- end }}
  
  {{- if or .Values.alert.sns.enable .Values.alert.sqs.enable }}
  aws_access_key_id: {{ .Values.aws.accessKeyId | b64enc | quote }}
  aws_secret_access_key: {{ .Values.aws.secretAccessKey | b64enc | quote }}
  {{- end }}
