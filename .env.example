# Versus Incident Environment Configuration Template
# Copy this file to .env and update the values for your environment

# ==================== SERVER CONFIGURATION ====================
# Host and port configuration
HOST=0.0.0.0
PORT=3000
PUBLIC_HOST=http://localhost:3000

# ==================== PROXY CONFIGURATION ====================
# Global proxy settings (optional)
# PROXY_URL=http://proxy.example.com:8080
# PROXY_USERNAME=proxy_user
# PROXY_PASSWORD=proxy_pass

# ==================== DEBUG CONFIGURATION ====================
# Enable debug mode to see request bodies in logs
DEBUG_BODY=true

# ==================== SLACK CONFIGURATION ====================
# Slack bot integration
SLACK_ENABLE=false
# SLACK_TOKEN=xoxb-your-slack-bot-token-here
# SLACK_CHANNEL_ID=C1234567890
# SLACK_BUTTON_TEXT=Acknowledge Alert
# SLACK_BUTTON_STYLE=primary
# SLACK_DISABLE_BUTTON=false

# ==================== TELEGRAM CONFIGURATION ====================
# Telegram bot integration
TELEGRAM_ENABLE=false
# TELEGRAM_BOT_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz
# TELEGRAM_CHAT_ID=-1001234567890
# TELEGRAM_USE_PROXY=false

# ==================== VIBER CONFIGURATION ====================
# Viber bot/channel integration
VIBER_ENABLE=false
# VIBER_API_TYPE=channel
# VIBER_BOT_TOKEN=your-viber-bot-token-here
# VIBER_USER_ID=01234567890A=
# VIBER_CHANNEL_ID=your-viber-channel-id-here
# VIBER_USE_PROXY=false

# ==================== EMAIL CONFIGURATION ====================
# SMTP email configuration
EMAIL_ENABLE=false
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-password-here
# EMAIL_TO=alerts@yourcompany.com
# EMAIL_SUBJECT=Incident Alert

# ==================== MICROSOFT TEAMS CONFIGURATION ====================
# Microsoft Teams Power Automate integration
MSTEAMS_ENABLE=false
# MSTEAMS_POWER_AUTOMATE_URL=https://prod-xx.westus.logic.azure.com:443/workflows/...
# Optional: Additional Power Automate URLs for different environments
# MSTEAMS_OTHER_POWER_URL_QC=https://prod-xx.westus.logic.azure.com:443/workflows/...

# ==================== LARK CONFIGURATION ====================
# Lark webhook integration
LARK_ENABLE=false
# LARK_WEBHOOK_URL=https://open.larksuite.com/open-apis/bot/v2/hook/your-webhook-token
# LARK_USE_PROXY=false
# Optional: Additional webhook URLs for different environments
# LARK_OTHER_WEBHOOK_URL_DEV=https://open.larksuite.com/open-apis/bot/v2/hook/dev-webhook-token
# LARK_OTHER_WEBHOOK_URL_PROD=https://open.larksuite.com/open-apis/bot/v2/hook/prod-webhook-token

# ==================== GOOGLE CHAT CONFIGURATION ====================
# Google Chat webhook integration
GOOGLE_CHAT_ENABLE=false
# GOOGLE_CHAT_WEBHOOK_URL=https://chat.googleapis.com/v1/spaces/SPACE_ID/messages?key=KEY&token=TOKEN
# GOOGLE_CHAT_USE_PROXY=false
# Optional: Additional webhook URLs for different environments
# GOOGLE_CHAT_OTHER_WEBHOOK_URL_DEV=https://chat.googleapis.com/v1/spaces/DEV_SPACE_ID/messages?key=KEY&token=TOKEN
# GOOGLE_CHAT_OTHER_WEBHOOK_URL_PROD=https://chat.googleapis.com/v1/spaces/PROD_SPACE_ID/messages?key=KEY&token=TOKEN

# ==================== QUEUE CONFIGURATION ====================
# Enable queue processing
QUEUE_ENABLE=true

# AWS SNS Configuration
SNS_ENABLE=false
# SNS_HTTPS_ENDPOINT_SUBSCRIPTION=https://your-domain.com
# SNS_TOPIC_ARN=arn:aws:sns:us-east-1:123456789012:your-topic

# AWS SQS Configuration
SQS_ENABLE=false
# SQS_QUEUE_URL=https://sqs.us-east-1.amazonaws.com/123456789012/your-queue

# GCP Pub/Sub Configuration
PUBSUB_ENABLE=false

# Azure Service Bus Configuration
AZBUS_ENABLE=false

# ==================== ON-CALL CONFIGURATION ====================
# On-call incident management
ONCALL_ENABLE=false
# ONCALL_INITIALIZED_ONLY=false
# ONCALL_WAIT_MINUTES=3
# ONCALL_PROVIDER=aws_incident_manager

# AWS Incident Manager Configuration
# AWS_INCIDENT_MANAGER_RESPONSE_PLAN_ARN=arn:aws:ssm-incidents::123456789012:response-plan/your-response-plan
# Optional: Additional response plans for different environments
# AWS_INCIDENT_MANAGER_OTHER_RESPONSE_PLAN_DEV=arn:aws:ssm-incidents::123456789012:response-plan/dev-response-plan
# AWS_INCIDENT_MANAGER_OTHER_RESPONSE_PLAN_PROD=arn:aws:ssm-incidents::123456789012:response-plan/prod-response-plan

# PagerDuty Configuration
# PAGERDUTY_ROUTING_KEY=your-pagerduty-integration-key-here
# Optional: Additional routing keys for different services
# PAGERDUTY_OTHER_ROUTING_KEY_CRITICAL=your-critical-service-routing-key
# PAGERDUTY_OTHER_ROUTING_KEY_DB=your-database-service-routing-key

# ==================== REDIS CONFIGURATION ====================
# Redis for on-call functionality (required when on-call is enabled)
REDIS_HOST=localhost
REDIS_PORT=6379
# REDIS_PASSWORD=
REDIS_DB=0
REDIS_INSECURE_SKIP_VERIFY=true
# Optional: Path to Redis CA certificate
# REDIS_CA_CERT=/path/to/redis-ca.pem

# ==================== AWS CONFIGURATION ====================
# AWS credentials (if not using IAM roles)
# AWS_ACCESS_KEY_ID=your-access-key-id
# AWS_SECRET_ACCESS_KEY=your-secret-access-key
# AWS_REGION=us-east-1

# ==================== DEFAULT RUNBOOK URL ====================
# Default runbook URL for alerts (used in templates)
# DEFAULT_RUNBOOK_URL=https://your-company.com/runbooks/default
